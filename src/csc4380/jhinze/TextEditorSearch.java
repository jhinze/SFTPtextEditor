/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csc4380.jhinze;

import java.awt.Color;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JTextArea;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter.HighlightPainter;

/**
 *
 * @author lk0
 */
public class TextEditorSearch extends JDialog {

    private int index;
    private int length;
    private int nextIndex;
    private ArrayList<Integer> results;
    private JTextArea textArea;
    private HighlightPainter painter;
    private Color highlightColor;

    /**
     * Creates new form TextEditorSearch
     */
    public TextEditorSearch(final Frame parent, boolean modal) {
        super(parent, "Search");
        setModal(modal);
        initComponents();
        highlightColor = Color.yellow;
        results = new ArrayList<>();
        index = -1;
        nextIndex = -1;
    }
    
    public TextEditorSearch(final Frame parent, boolean modal, Color highlight) {
        super(parent, "Search");
        setModal(modal);
        initComponents();
        highlightColor = highlight;
        results = new ArrayList<>();
        index = -1;
        nextIndex = -1;
    }
    
    public void showSearch(JTextArea textArea, Color highlight) {
        setHighlightColor(highlight);
        showSearch(textArea);
    }

    public void showSearch(JTextArea textArea) {
        this.textArea = textArea;
        textFieldSearch.requestFocus();
        textFieldSearch.selectAll();
        double parentX = this.getParent().getLocation().getX();
        double parentY = this.getParent().getLocation().getY();
        int parentW = this.getParent().getWidth();
        int parentH = this.getParent().getHeight();
        this.setLocation((int) (parentX + parentW / 2) - this.getWidth() / 2, (int) (parentY + parentH / 2) - this.getHeight() / 2);
        setVisible(true);
    }

    private void search() {
        nextIndex = -1;
        results.clear();
        if (textArea == null) {
            return;
        }
        textArea.getHighlighter().removeAllHighlights();
        String k = textFieldSearch.getText().toLowerCase().trim();
        if (k != null && k.length() > 0) {
            String s = textArea.getText().toLowerCase();
            painter = new DefaultHighlighter.DefaultHighlightPainter(getHighlightColor());
            for (int i = 0, j; i <= s.length(); i = j + k.length()) {
                if ((j = s.indexOf(k, i)) < 0) {
                    break;
                }
                try {
                    textArea.getHighlighter().addHighlight(j, j + k.length(), painter);
                    results.add(j);
                } catch (BadLocationException ex) {
                    Logger.getLogger(TextEditorSearch.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (!results.isEmpty()) {
                nextIndex = 0;
                next();
            }
            labelSearch.setText("Search Found " + results.size() + " Matches For \'" + k + "\'");
        }
    }

    private void next() {
        if (nextIndex >= 0) {
            textArea.setCaretPosition(results.get(nextIndex++));
            nextIndex %= results.size();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelSearch = new javax.swing.JLabel();
        textFieldSearch = new javax.swing.JTextField();
        buttonFind = new javax.swing.JButton();
        buttonNext = new javax.swing.JButton();

        setTitle("Find");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        labelSearch.setText("Search");

        textFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldSearchActionPerformed(evt);
            }
        });

        buttonFind.setText("Find");
        buttonFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFindActionPerformed(evt);
            }
        });

        buttonNext.setText("Next");
        buttonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelSearch)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(textFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonFind)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonNext)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonFind)
                    .addComponent(buttonNext))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldSearchActionPerformed
        search();
    }//GEN-LAST:event_textFieldSearchActionPerformed

    private void buttonFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFindActionPerformed
        search();
    }//GEN-LAST:event_buttonFindActionPerformed

    private void buttonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNextActionPerformed
        next();
    }//GEN-LAST:event_buttonNextActionPerformed

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        labelSearch.setText("Search");
        if (textArea == null) {
            return;
        }
        textArea.getHighlighter().removeAllHighlights();
    }//GEN-LAST:event_formComponentHidden


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonFind;
    private javax.swing.JButton buttonNext;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelSearch;
    private javax.swing.JTextField textFieldSearch;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the highlightColor
     */
    public Color getHighlightColor() {
        return highlightColor;
    }

    /**
     * @param highlightColor the highlightColor to set
     */
    public void setHighlightColor(Color highlightColor) {
        this.highlightColor = highlightColor;
    }
}
