/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csc4380.jhinze;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.io.File;
import javax.swing.JEditorPane;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.ScrollPaneConstants;
import javax.swing.plaf.ComponentUI;
import javax.swing.text.DefaultEditorKit;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.undo.UndoManager;

/**
 *
 * @author lk0
 */
public class TextEditorTextArea extends javax.swing.JPanel {
    
    private boolean newFile;
    private boolean changed;
    private DefaultMutableTreeNode currentFile;
    private UndoManager oops;
    private JPopupMenu popupMenu;
    private JMenuItem menuItemCut, menuItemCopy, menuItemPaste,menuItemDelete, 
            menuItemSelectAll, menuItemUndo, menuItemRedo, menuItemSearch;
    
    /**
     * Creates new form viewTextEditor
     */
    public TextEditorTextArea() {

        newFile = false;
        changed = false;
        initComponents();
        initPopupMenu();
        menuItemUndo.setEnabled(false);
        menuItemRedo.setEnabled(false);       

    }
    
    private void initPopupMenu() {
        popupMenu = new JPopupMenu("edit");
        
        menuItemUndo = new JMenuItem("Undo");
        getPopupMenu().add(getMenuItemUndo());
        
        menuItemRedo = new JMenuItem("Redo");
        getPopupMenu().add(getMenuItemRedo());
        
        getPopupMenu().addSeparator();
        
        menuItemCut = new JMenuItem("Cut");
        getPopupMenu().add(getMenuItemCut());
        
        menuItemCopy = new JMenuItem("Copy");
        getPopupMenu().add(getMenuItemCopy());
        
        menuItemPaste = new JMenuItem("Paste");
        getPopupMenu().add(getMenuItemPaste());
        
        menuItemDelete = new JMenuItem("Delete");
        getPopupMenu().add(getMenuItemDelete());
        
        menuItemSelectAll = new JMenuItem("Select All");
        getPopupMenu().add(getMenuItemSelectAll()); 
        
        getPopupMenu().addSeparator();
        
        menuItemSearch = new JMenuItem("Search");
        getPopupMenu().add(getMenuItemSearch());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelLineNumber = new javax.swing.JLabel();
        labelFileName = new javax.swing.JLabel();
        panelAntiWrap = new javax.swing.JPanel();
        scollPaneTextContainer = new javax.swing.JScrollPane();
        editorPaneTextArea = new javax.swing.JTextArea();

        labelLineNumber.setText("Line: ");

        labelFileName.setText("File: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(labelLineNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelFileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelFileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(labelLineNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panelAntiWrap.setFocusable(false);
        panelAntiWrap.setLayout(new java.awt.BorderLayout());

        editorPaneTextArea.setColumns(20);
        editorPaneTextArea.setRows(5);
        scollPaneTextContainer.setViewportView(editorPaneTextArea);

        panelAntiWrap.add(scollPaneTextContainer, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelAntiWrap, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAntiWrap, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea editorPaneTextArea;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelFileName;
    private javax.swing.JLabel labelLineNumber;
    private javax.swing.JPanel panelAntiWrap;
    private javax.swing.JScrollPane scollPaneTextContainer;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the editorPaneTextArea
     */
    public javax.swing.JTextArea getEditorPaneTextArea() {
        return editorPaneTextArea;
    }

    /**
     * @return the labelFileName
     */
    public javax.swing.JLabel getLabelFileName() {
        return labelFileName;
    }

    /**
     * @return the labelLineNumber
     */
    public javax.swing.JLabel getLabelLineNumber() {
        return labelLineNumber;
    }

    /**
     * @return the newFile
     */
    public boolean isNewFile() {
        return newFile;
    }

    /**
     * @param newFile the newFile to set
     */
    public void setNewFile(boolean newFile) {
        this.newFile = newFile;
    }

    /**
     * @return the file
     */
    public DefaultMutableTreeNode getFile() {
        return currentFile;
    }

    /**
     * @param file the file to set
     */
    public void setFile(DefaultMutableTreeNode file) {
        this.currentFile = file;
    }

    /**
     * @return the oops
     */
    public UndoManager getOops() {
        return oops;
    }

    /**
     * @param oops the oops to set
     */
    public void setOops(UndoManager oops) {
        this.oops = oops;
    }

    /**
     * @return the popupMenu
     */
    public JPopupMenu getPopupMenu() {
        return popupMenu;
    }

    /**
     * @return the menuItemCut
     */
    public JMenuItem getMenuItemCut() {
        return menuItemCut;
    }

    /**
     * @return the menuItemCopy
     */
    public JMenuItem getMenuItemCopy() {
        return menuItemCopy;
    }

    /**
     * @return the menuItemPaste
     */
    public JMenuItem getMenuItemPaste() {
        return menuItemPaste;
    }

    /**
     * @return the menuItemDelete
     */
    public JMenuItem getMenuItemDelete() {
        return menuItemDelete;
    }

    /**
     * @return the menuItemSelectAll
     */
    public JMenuItem getMenuItemSelectAll() {
        return menuItemSelectAll;
    }

    /**
     * @return the menuItemUndo
     */
    public JMenuItem getMenuItemUndo() {
        return menuItemUndo;
    }

    /**
     * @return the menuItemRedo
     */
    public JMenuItem getMenuItemRedo() {
        return menuItemRedo;
    }

    /**
     * @return the scrollPaneTextContainer
     */
    public javax.swing.JScrollPane getScrollPaneTextContainer() {
        return scollPaneTextContainer;
    }

    /**
     * @return the changed
     */
    public boolean isChanged() {
        return changed;
    }

    /**
     * @param changed the changed to set
     */
    public void setChanged(boolean changed) {
        this.changed = changed;
    }

    /**
     * @return the menuItemSearch
     */
    public JMenuItem getMenuItemSearch() {
        return menuItemSearch;
    }

}
